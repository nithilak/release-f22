add_test( [==[List::insertFront size]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::insertFront size]==]  )
set_tests_properties( [==[List::insertFront size]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::insertBack size]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::insertBack size]==]  )
set_tests_properties( [==[List::insertBack size]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::insert contents]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::insert contents]==]  )
set_tests_properties( [==[List::insert contents]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::triplerotate basic]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::triplerotate basic]==]  )
set_tests_properties( [==[List::triplerotate basic]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::triplerotate simple]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::triplerotate simple]==]  )
set_tests_properties( [==[List::triplerotate simple]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::triplerotate harder]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::triplerotate harder]==]  )
set_tests_properties( [==[List::triplerotate harder]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::triplerotate not a multiple of 3]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::triplerotate not a multiple of 3]==]  )
set_tests_properties( [==[List::triplerotate not a multiple of 3]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::triplerotate empty]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::triplerotate empty]==]  )
set_tests_properties( [==[List::triplerotate empty]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::triplerotate one]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::triplerotate one]==]  )
set_tests_properties( [==[List::triplerotate one]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::triplerotate two]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::triplerotate two]==]  )
set_tests_properties( [==[List::triplerotate two]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::triplerotate three]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::triplerotate three]==]  )
set_tests_properties( [==[List::triplerotate three]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split simple]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split simple]==]  )
set_tests_properties( [==[List::split simple]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split images]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split images]==]  )
set_tests_properties( [==[List::split images]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::_destroy empty list]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::_destroy empty list]==]  )
set_tests_properties( [==[List::_destroy empty list]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::begin() returns an iterator to the front of the list]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::begin() returns an iterator to the front of the list]==]  )
set_tests_properties( [==[List::begin() returns an iterator to the front of the list]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::operator++ advances the iterator (pre-increment)]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::operator++ advances the iterator (pre-increment)]==]  )
set_tests_properties( [==[List::ListIterator::operator++ advances the iterator (pre-increment)]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::operator++ advances the iterator (post-increment)]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::operator++ advances the iterator (post-increment)]==]  )
set_tests_properties( [==[List::ListIterator::operator++ advances the iterator (post-increment)]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::operator++ (post-increment) returns an un-incremented iterator]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::operator++ (post-increment) returns an un-incremented iterator]==]  )
set_tests_properties( [==[List::ListIterator::operator++ (post-increment) returns an un-incremented iterator]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::operator-- moves the iterator backwards]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::operator-- moves the iterator backwards]==]  )
set_tests_properties( [==[List::ListIterator::operator-- moves the iterator backwards]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::operator-- (post-increment) returns an un-incremented iterator]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::operator-- (post-increment) returns an un-incremented iterator]==]  )
set_tests_properties( [==[List::ListIterator::operator-- (post-increment) returns an un-incremented iterator]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::begin() returns head_]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::begin() returns head_]==]  )
set_tests_properties( [==[List::ListIterator::begin() returns head_]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::end() returns tail_]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::end() returns tail_]==]  )
set_tests_properties( [==[List::ListIterator::end() returns tail_]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::operator-- (post-increment) returns tail_ for input NULL]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::operator-- (post-increment) returns tail_ for input NULL]==]  )
set_tests_properties( [==[List::ListIterator::operator-- (post-increment) returns tail_ for input NULL]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::operator-- (pre-increment) returns tail_ for input NULL]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::operator-- (pre-increment) returns tail_ for input NULL]==]  )
set_tests_properties( [==[List::ListIterator::operator-- (pre-increment) returns tail_ for input NULL]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::end is reached]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::end is reached]==]  )
set_tests_properties( [==[List::ListIterator::end is reached]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::ListIterator::end is not ::begin in a non-empty list]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::ListIterator::end is not ::begin in a non-empty list]==]  )
set_tests_properties( [==[List::ListIterator::end is not ::begin in a non-empty list]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for size 5]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for size 5]==]  )
set_tests_properties( [==[List::split works as expected for size 5]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for size -1]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for size -1]==]  )
set_tests_properties( [==[List::split works as expected for size -1]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for size 0]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for size 0]==]  )
set_tests_properties( [==[List::split works as expected for size 0]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for size 1]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for size 1]==]  )
set_tests_properties( [==[List::split works as expected for size 1]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for size 2]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for size 2]==]  )
set_tests_properties( [==[List::split works as expected for size 2]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for size 3]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for size 3]==]  )
set_tests_properties( [==[List::split works as expected for size 3]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for size 4]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for size 4]==]  )
set_tests_properties( [==[List::split works as expected for size 4]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for size 6]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for size 6]==]  )
set_tests_properties( [==[List::split works as expected for size 6]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for size 7]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for size 7]==]  )
set_tests_properties( [==[List::split works as expected for size 7]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for list size 0, split 5]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for list size 0\, split 5]==]  )
set_tests_properties( [==[List::split works as expected for list size 0, split 5]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for list size 0, split 0]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for list size 0\, split 0]==]  )
set_tests_properties( [==[List::split works as expected for list size 0, split 0]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for list size 1, split 5]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for list size 1\, split 5]==]  )
set_tests_properties( [==[List::split works as expected for list size 1, split 5]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for list size 1, split 0]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for list size 1\, split 0]==]  )
set_tests_properties( [==[List::split works as expected for list size 1, split 0]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::split works as expected for list size 1, split 1]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::split works as expected for list size 1\, split 1]==]  )
set_tests_properties( [==[List::split works as expected for list size 1, split 1]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( List::reverse /workspaces/cs225env/release-f22/mp_clean_lists/build/test List::reverse  )
set_tests_properties( List::reverse PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::reverseNth #1]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::reverseNth #1]==]  )
set_tests_properties( [==[List::reverseNth #1]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::reverseNth #2]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::reverseNth #2]==]  )
set_tests_properties( [==[List::reverseNth #2]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( List::merge /workspaces/cs225env/release-f22/mp_clean_lists/build/test List::merge  )
set_tests_properties( List::merge PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::sort simple #1]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::sort simple #1]==]  )
set_tests_properties( [==[List::sort simple #1]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::sort simple #2]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::sort simple #2]==]  )
set_tests_properties( [==[List::sort simple #2]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::sort #1]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::sort #1]==]  )
set_tests_properties( [==[List::sort #1]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[List::sort #2]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[List::sort #2]==]  )
set_tests_properties( [==[List::sort #2]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[Hello World]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[Hello World]==]  )
set_tests_properties( [==[Hello World]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==["In an empty list, both head and tail are NULL."]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==["In an empty list\, both head and tail are NULL."]==]  )
set_tests_properties( [==["In an empty list, both head and tail are NULL."]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
add_test( [==[insertFront and insertBack at start are the same]==] /workspaces/cs225env/release-f22/mp_clean_lists/build/test [==[insertFront and insertBack at start are the same]==]  )
set_tests_properties( [==[insertFront and insertBack at start are the same]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225env/release-f22/mp_clean_lists/build)
set( test_TESTS [==[List::insertFront size]==] [==[List::insertBack size]==] [==[List::insert contents]==] [==[List::triplerotate basic]==] [==[List::triplerotate simple]==] [==[List::triplerotate harder]==] [==[List::triplerotate not a multiple of 3]==] [==[List::triplerotate empty]==] [==[List::triplerotate one]==] [==[List::triplerotate two]==] [==[List::triplerotate three]==] [==[List::split simple]==] [==[List::split images]==] [==[List::_destroy empty list]==] [==[List::begin() returns an iterator to the front of the list]==] [==[List::ListIterator::operator++ advances the iterator (pre-increment)]==] [==[List::ListIterator::operator++ advances the iterator (post-increment)]==] [==[List::ListIterator::operator++ (post-increment) returns an un-incremented iterator]==] [==[List::ListIterator::operator-- moves the iterator backwards]==] [==[List::ListIterator::operator-- (post-increment) returns an un-incremented iterator]==] [==[List::ListIterator::begin() returns head_]==] [==[List::ListIterator::end() returns tail_]==] [==[List::ListIterator::operator-- (post-increment) returns tail_ for input NULL]==] [==[List::ListIterator::operator-- (pre-increment) returns tail_ for input NULL]==] [==[List::ListIterator::end is reached]==] [==[List::ListIterator::end is not ::begin in a non-empty list]==] [==[List::split works as expected for size 5]==] [==[List::split works as expected for size -1]==] [==[List::split works as expected for size 0]==] [==[List::split works as expected for size 1]==] [==[List::split works as expected for size 2]==] [==[List::split works as expected for size 3]==] [==[List::split works as expected for size 4]==] [==[List::split works as expected for size 6]==] [==[List::split works as expected for size 7]==] [==[List::split works as expected for list size 0, split 5]==] [==[List::split works as expected for list size 0, split 0]==] [==[List::split works as expected for list size 1, split 5]==] [==[List::split works as expected for list size 1, split 0]==] [==[List::split works as expected for list size 1, split 1]==] List::reverse [==[List::reverseNth #1]==] [==[List::reverseNth #2]==] List::merge [==[List::sort simple #1]==] [==[List::sort simple #2]==] [==[List::sort #1]==] [==[List::sort #2]==] [==[Hello World]==] [==["In an empty list, both head and tail are NULL."]==] [==[insertFront and insertBack at start are the same]==])
